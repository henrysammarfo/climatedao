/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Proposal, ProposalInterface } from "../../contracts/Proposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "enum Proposal.ProjectCategory",
            name: "category",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "website",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "images",
            type: "string[]",
          },
        ],
        internalType: "struct Proposal.ProjectDetails",
        name: "_projectDetails",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_votingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quorumRequired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_majorityThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "co2Reduction",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "energyGeneration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jobsCreated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aiScore",
        type: "uint256",
      },
    ],
    name: "ImpactMetricsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Proposal.ProposalStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Proposal.ProposalStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProposalStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "choice",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "choice",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getUserVote",
    outputs: [
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "choice",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotingResults",
    outputs: [
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPassed",
    outputs: [
      {
        internalType: "bool",
        name: "passed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "impactMetrics",
    outputs: [
      {
        internalType: "uint256",
        name: "expectedCO2Reduction",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedEnergyGeneration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedJobsCreated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "aiImpactScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "aiAnalysisComplete",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "majorityThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "markAsExecuted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectDetails",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "enum Proposal.ProjectCategory",
        name: "category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "website",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum Proposal.ProposalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "co2Reduction",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energyGeneration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jobsCreated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "aiScore",
        type: "uint256",
      },
    ],
    name: "updateImpactMetrics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingData",
    outputs: [
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200386238038062003862833981810160405281019062000037919062000abf565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000ba2565b60405180910390fd5b620000be816200043060201b60201c565b5060018081905550620000e2672a5e5bad14deffb860c01b620004f460201b60201c565b620000fe67c6342985631e813160c01b620004f460201b60201c565b86601981905550620001216760bea3a6c3a1511e60c01b620004f460201b60201c565b85601760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200017e6731fb70320a6ca03060c01b620004f460201b60201c565b84601860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001db675c2356bc544ba86360c01b620004f460201b60201c565b8360026000820151816000019081620001f5919062000e00565b5060208201518160010190816200020d919062000e00565b50604082015181600201908162000225919062000e00565b5060608201518160030160006101000a81548160ff0219169083600681111562000254576200025362000ee7565b5b02179055506080820151816004015560a0820151816005015560c082015181600601908162000284919062000e00565b5060e0820151816007019080519060200190620002a3929190620004f7565b50905050620002c36705bf5cd90fff771960c01b620004f460201b60201c565b81601a81905550620002e6676c9f4ff1c0bb953960c01b620004f460201b60201c565b80601b819055506200030967671eb6a3b0efc67760c01b620004f460201b60201c565b42600a600401819055506200032f67e848620d43af061660c01b620004f460201b60201c565b82426200033d919062000f45565b600a600501819055506200036267917a4f4b85e1b7b360c01b620004f460201b60201c565b6000601760006101000a81548160ff021916908360048111156200038b576200038a62000ee7565b5b0217905550620003ac670a65107e3b01ec9060c01b620004f460201b60201c565b620003c867ea61ad07cf30a21160c01b620004f460201b60201c565b8573ffffffffffffffffffffffffffffffffffffffff16877f98120a6aaa04295520ab4e01c6c1235dd316e822cc9ff31db7b3f197366d18bd866000015187608001516040516200041b92919062000fe3565b60405180910390a35050505050505062001017565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b82805482825590600052602060002090810192821562000544579160200282015b828111156200054357825182908162000532919062000e00565b509160200191906001019062000518565b5b50905062000553919062000557565b5090565b5b808211156200057b57600081816200057191906200057f565b5060010162000558565b5090565b5080546200058d9062000bf9565b6000825580601f10620005a15750620005c2565b601f016020900490600052602060002090810190620005c19190620005c5565b5b50565b5b80821115620005e0576000816000905550600101620005c6565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6200060d81620005f8565b81146200061957600080fd5b50565b6000815190506200062d8162000602565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006608262000633565b9050919050565b620006728162000653565b81146200067e57600080fd5b50565b600081519050620006928162000667565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006e8826200069d565b810181811067ffffffffffffffff821117156200070a5762000709620006ae565b5b80604052505050565b60006200071f620005e4565b90506200072d8282620006dd565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156200075f576200075e620006ae565b5b6200076a826200069d565b9050602081019050919050565b60005b83811015620007975780820151818401526020810190506200077a565b60008484015250505050565b6000620007ba620007b48462000741565b62000713565b905082815260208101848484011115620007d957620007d86200073c565b5b620007e684828562000777565b509392505050565b600082601f83011262000806576200080562000737565b5b815162000818848260208601620007a3565b91505092915050565b600781106200082f57600080fd5b50565b600081519050620008438162000821565b92915050565b600067ffffffffffffffff821115620008675762000866620006ae565b5b602082029050602081019050919050565b600080fd5b6000620008946200088e8462000849565b62000713565b90508083825260208201905060208402830185811115620008ba57620008b962000878565b5b835b818110156200090857805167ffffffffffffffff811115620008e357620008e262000737565b5b808601620008f28982620007ee565b85526020850194505050602081019050620008bc565b5050509392505050565b600082601f8301126200092a576200092962000737565b5b81516200093c8482602086016200087d565b91505092915050565b600061010082840312156200095f576200095e62000698565b5b6200096c61010062000713565b9050600082015167ffffffffffffffff8111156200098f576200098e62000732565b5b6200099d84828501620007ee565b600083015250602082015167ffffffffffffffff811115620009c457620009c362000732565b5b620009d284828501620007ee565b602083015250604082015167ffffffffffffffff811115620009f957620009f862000732565b5b62000a0784828501620007ee565b604083015250606062000a1d8482850162000832565b606083015250608062000a33848285016200061c565b60808301525060a062000a49848285016200061c565b60a08301525060c082015167ffffffffffffffff81111562000a705762000a6f62000732565b5b62000a7e84828501620007ee565b60c08301525060e082015167ffffffffffffffff81111562000aa55762000aa462000732565b5b62000ab38482850162000912565b60e08301525092915050565b600080600080600080600060e0888a03121562000ae15762000ae0620005ee565b5b600062000af18a828b016200061c565b975050602062000b048a828b0162000681565b965050604062000b178a828b0162000681565b955050606088015167ffffffffffffffff81111562000b3b5762000b3a620005f3565b5b62000b498a828b0162000945565b945050608062000b5c8a828b016200061c565b93505060a062000b6f8a828b016200061c565b92505060c062000b828a828b016200061c565b91505092959891949750929550565b62000b9c8162000653565b82525050565b600060208201905062000bb9600083018462000b91565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000c1257607f821691505b60208210810362000c285762000c2762000bca565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000c927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000c53565b62000c9e868362000c53565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000ce162000cdb62000cd584620005f8565b62000cb6565b620005f8565b9050919050565b6000819050919050565b62000cfd8362000cc0565b62000d1562000d0c8262000ce8565b84845462000c60565b825550505050565b600090565b62000d2c62000d1d565b62000d3981848462000cf2565b505050565b5b8181101562000d615762000d5560008262000d22565b60018101905062000d3f565b5050565b601f82111562000db05762000d7a8162000c2e565b62000d858462000c43565b8101602085101562000d95578190505b62000dad62000da48562000c43565b83018262000d3e565b50505b505050565b600082821c905092915050565b600062000dd56000198460080262000db5565b1980831691505092915050565b600062000df0838362000dc2565b9150826002028217905092915050565b62000e0b8262000bbf565b67ffffffffffffffff81111562000e275762000e26620006ae565b5b62000e33825462000bf9565b62000e4082828562000d65565b600060209050601f83116001811462000e78576000841562000e63578287015190505b62000e6f858262000de2565b86555062000edf565b601f19841662000e888662000c2e565b60005b8281101562000eb25784890151825560018201915060208501945060208101905062000e8b565b8683101562000ed2578489015162000ece601f89168262000dc2565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000f5282620005f8565b915062000f5f83620005f8565b925082820190508082111562000f7a5762000f7962000f16565b5b92915050565b600082825260208201905092915050565b600062000f9e8262000bbf565b62000faa818562000f80565b935062000fbc81856020860162000777565b62000fc7816200069d565b840191505092915050565b62000fdd81620005f8565b82525050565b6000604082019050818103600083015262000fff818562000f91565b905062001010602083018462000fd2565b9392505050565b61283b80620010276000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063d4923d4e11610071578063d4923d4e146102b0578063da4a4e4a146102e1578063da650ec6146102ff578063f2fde38b14610320578063f9135be91461033c5761012c565b80638da5cb5b1461023e5780639070577f1461025c578063a8e4fb9014610266578063b99aeb9a14610284578063cc06d3ce1461028e5761012c565b8063373058b8116100f4578063373058b8146101d257806338af3eed146101dc57806342d9a845146101fa5780636eb8f68414610216578063715018a6146102345761012c565b8063088868e814610131578063113e20881461014f578063200d2ed2146101725780632accd144146101905780632dfca445146101b4575b600080fd5b610139610358565b6040516101469190611d3f565b60405180910390f35b61015761035e565b60405161016996959493929190611d5a565b60405180910390f35b61017a610388565b6040516101879190611e32565b60405180910390f35b61019861039b565b6040516101ab9796959493929190611f25565b60405180910390f35b6101bc6105f8565b6040516101c99190611d3f565b60405180910390f35b6101da6105fe565b005b6101e4610a2b565b6040516101f19190611ff1565b60405180910390f35b610214600480360381019061020f919061203d565b610a51565b005b61021e610bad565b60405161022b91906120bf565b60405180910390f35b61023c610d70565b005b610246610d84565b6040516102539190611ff1565b60405180910390f35b610264610dad565b005b61026e6110bf565b60405161027b9190611ff1565b60405180910390f35b61028c6110e5565b005b6102966112d2565b6040516102a79594939291906120da565b60405180910390f35b6102ca60048036038101906102c59190612159565b611303565b6040516102d89291906121a2565b60405180910390f35b6102e96113eb565b6040516102f69190611d3f565b60405180910390f35b6103076113f1565b60405161031794939291906121cb565b60405180910390f35b61033a60048036038101906103359190612159565b611459565b005b6103566004803603810190610351919061223c565b6114df565b005b601a5481565b600a8060000154908060010154908060020154908060030154908060040154908060050154905086565b601760009054906101000a900460ff1681565b60028060000180546103ac906122ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103d8906122ab565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b50505050509080600101805461043a906122ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610466906122ab565b80156104b35780601f10610488576101008083540402835291602001916104b3565b820191906000526020600020905b81548152906001019060200180831161049657829003601f168201915b5050505050908060020180546104c8906122ab565b80601f01602080910402602001604051908101604052809291908181526020018280546104f4906122ab565b80156105415780601f1061051657610100808354040283529160200191610541565b820191906000526020600020905b81548152906001019060200180831161052457829003601f168201915b5050505050908060030160009054906101000a900460ff1690806004015490806005015490806006018054610575906122ab565b80601f01602080910402602001604051908101604052809291908181526020018280546105a1906122ab565b80156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b5050505050905087565b60195481565b6106126734dd8ad9c4f9b97c60c01b611b76565b61062667127cc137df5a857c60c01b611b76565b61063a67b4e1253684cdc59360c01b611b76565b61064e674c6bc380edb929aa60c01b611b76565b6106626796573275c90a4bb460c01b611b76565b600a6005015442116106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090612328565b60405180910390fd5b6106bd6790d0f383b7b916b360c01b611b76565b6106d167ee9ee1cfd217f45d60c01b611b76565b6106e5674e1958f24206df3660c01b611b76565b6106f967db3636583d2373b860c01b611b76565b610701611b79565b61071567aceb3f663e835de660c01b611b76565b610729670489f08939a3d6b260c01b611b76565b61073d677108088ddd05455c60c01b611b76565b610751677150e3bfdb9dc08760c01b611b76565b61076567e25958d130e9e15660c01b611b76565b6000600481111561077957610778611dbb565b5b601760009054906101000a900460ff16600481111561079b5761079a611dbb565b5b146107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d290612394565b60405180910390fd5b6107ef675cd09bcdb380eee260c01b611b76565b6108026669d04ab08127d060c01b611b76565b61081667a573410a0349e67260c01b611b76565b600061082c67f709d2046c15e3ae60c01b611b76565b61084067b85066276ce8f25d60c01b611b76565b601a54600a6003015410156108805761086367d8c626dd3cd2e2a660c01b611b76565b6108776749f3c45904da546360c01b611b76565b60029050610941565b610894678534ddd3ff13660960c01b611b76565b6108a867d95b0b5d5a8a73dd60c01b611b76565b601b54600a60010154600a600001546108c191906123e3565b6064600a600001546108d39190612417565b6108dd9190612488565b10610913576108f667fae27218ffba81b860c01b611b76565b61090a6714c13279d3a5b85960c01b611b76565b60019050610940565b61092767389e8865717ef45f60c01b611b76565b61093b6770f2db2491dec02860c01b611b76565b600290505b5b610955677387633669907ef660c01b611b76565b61096967ffb8503335c9099460c01b611b76565b6000601760009054906101000a900460ff169050610991676b6083f045ab853d60c01b611b76565b81601760006101000a81548160ff021916908360048111156109b6576109b5611dbb565b5b02179055506109cf670372ce1f8d6b426860c01b611b76565b6109e367a7606573f35a4c1160c01b611b76565b6019547fb0978968e606225988b6464f99ce7e86b0e8770d80eaec1369bb3780e05c64388284604051610a179291906124b9565b60405180910390a25050610a29611bbf565b565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a65675a6da9d83e5fb2fc60c01b611b76565b610a6d611bc8565b610a8167cb6c79c284378bc060c01b611b76565b610a9567ee8c6c301c3f200260c01b611b76565b610aa9670a78ef7dd81345fe60c01b611b76565b83601260000181905550610ac767050aa6d73285a06560c01b611b76565b82601260010181905550610ae56722f676e11e8d6daf60c01b611b76565b81601260020181905550610b0367a6b5088354066bb860c01b611b76565b80601260030181905550610b2167466edd9290ec193e60c01b611b76565b6001601260040160006101000a81548160ff021916908315150217905550610b5367c167ef3776937ced60c01b611b76565b610b6767a1b73f15096ab18660c01b611b76565b6019547ff4f4153c1a7414f5c2d83d2d51c3a0077754652f7dae460b37f2b0fa705a720785858585604051610b9f94939291906121cb565b60405180910390a250505050565b6000610bc3670bea4d0599fce5ed60c01b611b76565b610bd7676ff3a960100cfd5960c01b611b76565b610beb672d56d9b3336ffa6460c01b611b76565b601a54600a600301541015610c3f57610c0e67b7497c6fb54ad16360c01b611b76565b610c22675705f7883974d3a560c01b611b76565b610c36679016dbd95f20163a60c01b611b76565b60009050610d6d565b610c536706d9defa83bbcff460c01b611b76565b610c67678443fdf70bf0bf7160c01b611b76565b610c7b67b5bd65aef42cf80360c01b611b76565b6000600a60010154600a60000154610c9391906123e3565b9050610ca9678c79c2078db4463560c01b611b76565b610cbd67b1af0aaec21889ce60c01b611b76565b60008103610d0b57610cd9676836ff4b0087415b60c01b611b76565b610ced679ee183c65ea0180d60c01b611b76565b610d016772fb226834c9c03860c01b611b76565b6000915050610d6d565b610d1f67ddb181c4dd6fcec960c01b611b76565b610d3367e5794b100bf6ff5f60c01b611b76565b610d4767efe3e882d1b38be660c01b611b76565b601b54816064600a60000154610d5d9190612417565b610d679190612488565b10159150505b90565b610d78611bc8565b610d826000611c4f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dc1679229de39d14555f460c01b611b76565b610dd567db5d223a060a29dd60c01b611b76565b610de96705ee67e8dcff0e8d60c01b611b76565b610dfd6721452da543f2493960c01b611b76565b601760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e6a5750610e6967f989aaf913deac8460c01b611d13565b5b80610ec35750610e78610d84565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610ec25750610ec1673e87e8a79de590ee60c01b611d13565b5b5b610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef990612554565b60405180910390fd5b610f1667030bd5717a926fa360c01b611b76565b610f2a671b0ba38c960230a760c01b611b76565b610f3e674b0e29ba4f9aa77760c01b611b76565b610f52672a43f4aefecb2a6360c01b611b76565b60006004811115610f6657610f65611dbb565b5b601760009054906101000a900460ff166004811115610f8857610f87611dbb565b5b14610fc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbf90612394565b60405180910390fd5b610fdc6788857136a521594c60c01b611b76565b610ff067dbcd4d7d06ad7c8760c01b611b76565b61100467696f061d8c8f675760c01b611b76565b6000601760009054906101000a900460ff16905061102c6768ced4eb3f38363e60c01b611b76565b6004601760006101000a81548160ff0219169083600481111561105257611051611dbb565b5b021790555061106b67bc7eee8fd5e5f20660c01b611b76565b61107f678245d5c9031c273d60c01b611b76565b6019547fb0978968e606225988b6464f99ce7e86b0e8770d80eaec1369bb3780e05c64388260046040516110b49291906124b9565b60405180910390a250565b601760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110f9671a816870fc80c84660c01b611b76565b611101611bc8565b611115674c4882492560718c60c01b611b76565b61112967c9eb16aabfa5668760c01b611b76565b61113d67fcf8fb611a55bf3b60c01b611b76565b611151673d49763061a01b8f60c01b611b76565b611165676fb061a914adb95860c01b611b76565b6001600481111561117957611178611dbb565b5b601760009054906101000a900460ff16600481111561119b5761119a611dbb565b5b146111db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d2906125e6565b60405180910390fd5b6111ef67d613d35d67597f2660c01b611b76565b6112036786b31c0eb9e294b860c01b611b76565b611217674c38c9def4f8bcc060c01b611b76565b6000601760009054906101000a900460ff16905061123f67996178786d60227560c01b611b76565b6003601760006101000a81548160ff0219169083600481111561126557611264611dbb565b5b021790555061127e678c6267b4953583ef60c01b611b76565b61129267d1f97c0196753dc560c01b611b76565b6019547fb0978968e606225988b6464f99ce7e86b0e8770d80eaec1369bb3780e05c64388260036040516112c79291906124b9565b60405180910390a250565b60128060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008061131a678de4a89d83ca730060c01b611b76565b61132e67b473a8c63b8583a760c01b611b76565b611342678100b2e3e56cbc3960c01b611b76565b600a60060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600a60070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691509150915091565b601b5481565b60008060008061140b67cfd66765d1dd7aa060c01b611b76565b61141f67828b3c240ff0c64b60c01b611b76565b6114336789e7f0b34829371f60c01b611b76565b600a60000154600a60010154600a60020154600a60030154935093509350935090919293565b611461611bc8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114d35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114ca9190611ff1565b60405180910390fd5b6114dc81611c4f565b50565b6114f36757c24a70dcc0432860c01b611b76565b611507676d1bc1788c027bd760c01b611b76565b61151b67bff9f439ef603bbf60c01b611b76565b61152f67f1d589e57194a9cd60c01b611b76565b6115436786a8792c46c881bd60c01b611b76565b6000600481111561155757611556611dbb565b5b601760009054906101000a900460ff16600481111561157957611578611dbb565b5b146115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b090612394565b60405180910390fd5b6115cd67acf2861bf9c22dce60c01b611b76565b6115e1677e6382187dfd948760c01b611b76565b6115f5671a3c8424fbcc0b9a60c01b611b76565b6116096743692eb2e9720f0d60c01b611b76565b61161d677e347694b632fbb760c01b611b76565b611631671f53d565fb6e915c60c01b611b76565b611645677ff6cb96945520ce60c01b611b76565b60028260ff16111561168c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168390612652565b60405180910390fd5b6116a067afadcfd8d199f2e260c01b611b76565b6116b467e94f346a2832f23d60c01b611b76565b6116c867b21cc011ccd006d060c01b611b76565b6116dc671cd513662a62eec860c01b611b76565b600a60060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561176c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611763906126be565b60405180910390fd5b6117806750a720adb2a59db560c01b611b76565b61179467fd95c652c271b56760c01b611b76565b6117a86712bba4559b9d418f60c01b611b76565b6117bc67a82bbb876cf7feda60c01b611b76565b600a60050154421115611804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fb9061272a565b60405180910390fd5b6118186751759ed35b792a8060c01b611b76565b61182c670a41bd76fce3639d60c01b611b76565b611840677014b21fa4a51a2e60c01b611b76565b611854676a96603b84ab940860c01b611b76565b60008111611897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188e906127bc565b60405180910390fd5b6118ab671dff86fcf062c04e60c01b611b76565b6118bf6776f74dde5a69e7a260c01b611b76565b6001600a60060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061192e67523c960a5b5911ee60c01b611b76565b81600a60070160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555061199d679d3bdc7b7ff128ac60c01b611b76565b80600a60030160008282546119b291906123e3565b925050819055506119cd6728801197caa5c37b60c01b611b76565b6119e1677e5b5bba772b444360c01b611b76565b60018260ff1603611a3557611a0067f3162a91b5c23b8f60c01b611b76565b611a1467fec8b9b523966c5060c01b611b76565b80600a6000016000828254611a2991906123e3565b92505081905550611af7565b611a4967bdcb28b05c2abb4460c01b611b76565b611a5d67be13a6786fbf960a60c01b611b76565b60008260ff1603611ab157611a7c675294aaf91f59d13b60c01b611b76565b611a9067a9ff60333dafb63560c01b611b76565b80600a6001016000828254611aa591906123e3565b92505081905550611af6565b611ac567983209c70677aa0660c01b611b76565b611ad96750df07070a3af91460c01b611b76565b80600a6002016000828254611aee91906123e3565b925050819055505b5b611b0b6770e640ee290159cf60c01b611b76565b611b1f679e544d47fd95fbc060c01b611b76565b6019543373ffffffffffffffffffffffffffffffffffffffff167f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d298484604051611b6a9291906127dc565b60405180910390a35050565b50565b600260015403611bb5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b611bd0611d1e565b73ffffffffffffffffffffffffffffffffffffffff16611bee610d84565b73ffffffffffffffffffffffffffffffffffffffff1614611c4d57611c11611d1e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611c449190611ff1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019050919050565b600033905090565b6000819050919050565b611d3981611d26565b82525050565b6000602082019050611d546000830184611d30565b92915050565b600060c082019050611d6f6000830189611d30565b611d7c6020830188611d30565b611d896040830187611d30565b611d966060830186611d30565b611da36080830185611d30565b611db060a0830184611d30565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611dfb57611dfa611dbb565b5b50565b6000819050611e0c82611dea565b919050565b6000611e1c82611dfe565b9050919050565b611e2c81611e11565b82525050565b6000602082019050611e476000830184611e23565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e87578082015181840152602081019050611e6c565b60008484015250505050565b6000601f19601f8301169050919050565b6000611eaf82611e4d565b611eb98185611e58565b9350611ec9818560208601611e69565b611ed281611e93565b840191505092915050565b60078110611eee57611eed611dbb565b5b50565b6000819050611eff82611edd565b919050565b6000611f0f82611ef1565b9050919050565b611f1f81611f04565b82525050565b600060e0820190508181036000830152611f3f818a611ea4565b90508181036020830152611f538189611ea4565b90508181036040830152611f678188611ea4565b9050611f766060830187611f16565b611f836080830186611d30565b611f9060a0830185611d30565b81810360c0830152611fa28184611ea4565b905098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fdb82611fb0565b9050919050565b611feb81611fd0565b82525050565b60006020820190506120066000830184611fe2565b92915050565b600080fd5b61201a81611d26565b811461202557600080fd5b50565b60008135905061203781612011565b92915050565b600080600080608085870312156120575761205661200c565b5b600061206587828801612028565b945050602061207687828801612028565b935050604061208787828801612028565b925050606061209887828801612028565b91505092959194509250565b60008115159050919050565b6120b9816120a4565b82525050565b60006020820190506120d460008301846120b0565b92915050565b600060a0820190506120ef6000830188611d30565b6120fc6020830187611d30565b6121096040830186611d30565b6121166060830185611d30565b61212360808301846120b0565b9695505050505050565b61213681611fd0565b811461214157600080fd5b50565b6000813590506121538161212d565b92915050565b60006020828403121561216f5761216e61200c565b5b600061217d84828501612144565b91505092915050565b600060ff82169050919050565b61219c81612186565b82525050565b60006040820190506121b760008301856120b0565b6121c46020830184612193565b9392505050565b60006080820190506121e06000830187611d30565b6121ed6020830186611d30565b6121fa6040830185611d30565b6122076060830184611d30565b95945050505050565b61221981612186565b811461222457600080fd5b50565b60008135905061223681612210565b92915050565b600080604083850312156122535761225261200c565b5b600061226185828601612227565b925050602061227285828601612028565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122c357607f821691505b6020821081036122d6576122d561227c565b5b50919050565b7f566f74696e6720706572696f6420686173206e6f7420656e6465640000000000600082015250565b6000612312601b83611e58565b915061231d826122dc565b602082019050919050565b6000602082019050818103600083015261234181612305565b9050919050565b7f50726f706f73616c206973206e6f742061637469766500000000000000000000600082015250565b600061237e601683611e58565b915061238982612348565b602082019050919050565b600060208201905081810360008301526123ad81612371565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ee82611d26565b91506123f983611d26565b9250828201905080821115612411576124106123b4565b5b92915050565b600061242282611d26565b915061242d83611d26565b925082820261243b81611d26565b91508282048414831517612452576124516123b4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061249382611d26565b915061249e83611d26565b9250826124ae576124ad612459565b5b828204905092915050565b60006040820190506124ce6000830185611e23565b6124db6020830184611e23565b9392505050565b7f4f6e6c792070726f706f736572206f72206f776e65722063616e2063616e636560008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b600061253e602183611e58565b9150612549826124e2565b604082019050919050565b6000602082019050818103600083015261256d81612531565b9050919050565b7f50726f706f73616c206d7573742062652070617373656420746f20657865637560008201527f7465000000000000000000000000000000000000000000000000000000000000602082015250565b60006125d0602283611e58565b91506125db82612574565b604082019050919050565b600060208201905081810360008301526125ff816125c3565b9050919050565b7f496e76616c696420766f74652063686f69636500000000000000000000000000600082015250565b600061263c601383611e58565b915061264782612606565b602082019050919050565b6000602082019050818103600083015261266b8161262f565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b60006126a8600d83611e58565b91506126b382612672565b602082019050919050565b600060208201905081810360008301526126d78161269b565b9050919050565b7f566f74696e6720706572696f642068617320656e646564000000000000000000600082015250565b6000612714601783611e58565b915061271f826126de565b602082019050919050565b6000602082019050818103600083015261274381612707565b9050919050565b7f566f74696e6720776569676874206d757374206265206772656174657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b60006127a6602483611e58565b91506127b18261274a565b604082019050919050565b600060208201905081810360008301526127d581612799565b9050919050565b60006040820190506127f16000830185612193565b6127fe6020830184611d30565b939250505056fea26469706673582212204e457027ab673e7209229379d7df5c960db943a7950904a8b3b4a35140474cba64736f6c63430008180033";

type ProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proposal__factory extends ContractFactory {
  constructor(...args: ProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _proposalId: BigNumberish,
    _proposer: AddressLike,
    _beneficiary: AddressLike,
    _projectDetails: Proposal.ProjectDetailsStruct,
    _votingDuration: BigNumberish,
    _quorumRequired: BigNumberish,
    _majorityThreshold: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _proposalId,
      _proposer,
      _beneficiary,
      _projectDetails,
      _votingDuration,
      _quorumRequired,
      _majorityThreshold,
      overrides || {}
    );
  }
  override deploy(
    _proposalId: BigNumberish,
    _proposer: AddressLike,
    _beneficiary: AddressLike,
    _projectDetails: Proposal.ProjectDetailsStruct,
    _votingDuration: BigNumberish,
    _quorumRequired: BigNumberish,
    _majorityThreshold: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _proposalId,
      _proposer,
      _beneficiary,
      _projectDetails,
      _votingDuration,
      _quorumRequired,
      _majorityThreshold,
      overrides || {}
    ) as Promise<
      Proposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Proposal__factory {
    return super.connect(runner) as Proposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalInterface {
    return new Interface(_abi) as ProposalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Proposal {
    return new Contract(address, _abi, runner) as unknown as Proposal;
  }
}
