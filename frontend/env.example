# =============================================================================
# HUGGING FACE API CONFIGURATION
# =============================================================================
# Required for AI-powered proposal analysis and impact assessment
# 
# How to obtain your Hugging Face API key:
# 1. Go to https://huggingface.co/settings/tokens
# 2. Create a new token with "Read" permissions
# 3. Copy the token (starts with 'hf_')
# 4. Paste it below (without quotes)
#
# Required permissions:
# - Read access to models
# - Access to Inference API
# - Specifically needs access to: mistralai/Mistral-7B-Instruct-v0.3
#
# Rate limits and quotas:
# - Free tier: Limited requests per month
# - Paid tiers: Higher limits available
# - Check your usage at: https://huggingface.co/settings/billing
#
# Testing your API key:
# curl -H "Authorization: Bearer YOUR_API_KEY" \
#      -H "Content-Type: application/json" \
#      -d '{"inputs": "Hello world"}' \
#      https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.3
#
# Security notes:
# - Never commit this file to version control
# - Keep your API key private and secure
# - Rotate your key periodically
# - Monitor usage for unusual activity
#
# Troubleshooting:
# - 401 Unauthorized: Check API key format and validity
# - 429 Rate Limited: You've exceeded your quota
# - 503 Service Unavailable: Model is loading, wait 1-2 minutes
# - Connection timeout: Check internet connection
VITE_HF_API_KEY=hf_your_api_key_here

# Contract addresses (XDC Apothem Testnet)
VITE_CLIMATE_TOKEN_ADDRESS=0x41d87298B54d329872c29ec385367cD4C404e8e6
VITE_CLIMATE_DAO_ADDRESS=0xfD2CFC86e06c54d1ffe9B503391d91452a8Fd02D

# XDC Network configuration
VITE_XDC_CHAIN_ID=51
VITE_XDC_RPC_URL=https://rpc.apothem.network

# WalletConnect Project ID
VITE_WALLETCONNECT_PROJECT_ID=20255749664031d14f00d4dee2989433

# =============================================================================
# TRIBES SDK CONFIGURATION
# =============================================================================
# Required for Tribes OS integration - community governance and engagement platform
# 
# Tribes SDK Documentation: https://docs.tribes.xyz
# Setup Guide: https://docs.tribes.xyz/setup/environment
# API Keys: https://docs.tribes.xyz/setup/api-keys
#
# =============================================================================
# API KEY CONFIGURATION
# =============================================================================
# Your Tribes SDK API key for authentication and access to Tribes services
#
# How to obtain your Tribes API key:
# 1. Go to https://tribes.xyz/dashboard
# 2. Sign up or log in to your account
# 3. Navigate to "API Keys" section
# 4. Create a new API key with appropriate permissions
# 5. Copy the key (typically starts with 'tribes_' or similar)
# 6. Paste it below (without quotes)
#
# Required permissions for ClimateDAO integration:
# - Read access to tribe data
# - Write access to user profiles
# - Access to points and rewards system
# - Token management permissions
#
# Security notes:
# - Keep your API key private and secure
# - Never commit this file to version control
# - Rotate your key periodically
# - Monitor usage for unusual activity
#
# Testing your API key:
# You can test your configuration using the development tools in the Tribes dashboard
# or by running the configuration tester component in development mode.
#
# Troubleshooting:
# - Invalid API key: Check key format and validity
# - Permission denied: Ensure key has required permissions
# - Rate limited: You've exceeded your API quota
# - Network error: Check internet connection and Tribes service status
VITE_TRIBES_API_KEY=your_tribes_api_key_here

# =============================================================================
# TRIBE CONFIGURATION
# =============================================================================
# The unique identifier for your ClimateDAO tribe in the Tribes ecosystem
#
# How to find your tribe ID:
# 1. Go to https://tribes.xyz/dashboard
# 2. Navigate to your tribe settings
# 3. The tribe ID is displayed in the tribe information section
# 4. It's typically a positive integer (e.g., 1, 2, 3, etc.)
#
# For ClimateDAO, this should be set to your specific tribe ID
# If you don't have a tribe yet, you can create one at https://tribes.xyz/create
#
# Validation:
# - Must be a positive integer
# - Must correspond to an existing tribe
# - Must be accessible with your API key
VITE_TRIBES_TRIBE_ID=1

# =============================================================================
# CONTRACT ADDRESSES CONFIGURATION
# =============================================================================
# JSON object containing all required smart contract addresses for Tribes SDK
#
# These contracts handle different aspects of the Tribes ecosystem:
# - roleManager: Manages user roles and permissions
# - tribeController: Controls tribe operations and governance
# - astrixToken: The main Tribes token contract
# - tokenDispenser: Handles token distribution and rewards
# - astrixPointSystem: Manages points and XP system
# - profileNFTMinter: Creates and manages user profile NFTs
#
# How to obtain contract addresses:
# 1. Go to https://docs.tribes.xyz/contracts
# 2. Find the contract addresses for your network (XDC Apothem Testnet)
# 3. Copy the addresses for each required contract
# 4. Format them as a JSON object (see example below)
#
# Network-specific addresses:
# - XDC Apothem Testnet (Chain ID: 51): Use testnet addresses
# - XDC Mainnet (Chain ID: 50): Use mainnet addresses
#
# Address format validation:
# - Must start with '0x'
# - Must be exactly 42 characters long (including '0x')
# - Must be valid Ethereum-style addresses
# - Must be deployed contracts (not placeholder addresses)
#
# Example format (replace with actual addresses):
# {
#   "roleManager": "0x1234567890123456789012345678901234567890",
#   "tribeController": "0x2345678901234567890123456789012345678901",
#   "astrixToken": "0x3456789012345678901234567890123456789012",
#   "tokenDispenser": "0x4567890123456789012345678901234567890123",
#   "astrixPointSystem": "0x5678901234567890123456789012345678901234",
#   "profileNFTMinter": "0x6789012345678901234567890123456789012345"
# }
#
# Troubleshooting:
# - Invalid JSON: Check syntax and ensure proper escaping
# - Invalid addresses: Verify address format and deployment
# - Contract not found: Ensure contracts are deployed on the correct network
# - Access denied: Check if contracts are accessible with your configuration
VITE_TRIBES_CONTRACT_ADDRESSES={"roleManager":"0x123...","tribeController":"0x456...","astrixToken":"0x789...","tokenDispenser":"0xabc...","astrixPointSystem":"0xdef...","profileNFTMinter":"0xghi..."}

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
# XDC Network chain ID for Tribes SDK integration
#
# Supported networks:
# - 51: XDC Apothem Testnet (recommended for development)
# - 50: XDC Mainnet (for production)
#
# Make sure this matches your wallet network and contract addresses
# The Tribes SDK will use this to determine which network to connect to
#
# Validation:
# - Must be 50 (mainnet) or 51 (testnet)
# - Must match your wallet's current network
# - Must correspond to the network where your contracts are deployed
VITE_XDC_CHAIN_ID=51

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================
# Enable verbose logging for Tribes SDK (development only)
# Set to 'true' for detailed logging, 'false' for production
# 
# Note: Verbose logging may impact performance and should be disabled in production
VITE_TRIBES_VERBOSE=false

# =============================================================================
# CONFIGURATION TESTING
# =============================================================================
# To test your Tribes SDK configuration:
# 1. Set all required environment variables above
# 2. Start the development server: npm run dev
# 3. Open the Tribes dashboard in your browser
# 4. If configuration is invalid, you'll see detailed error messages
# 5. Use the "Test Configuration" button (development mode only)
# 6. Fix any issues and retry
#
# Common configuration issues:
# - Missing environment variables
# - Invalid API key format
# - Incorrect contract addresses
# - Network mismatch
# - Permission issues
#
# For additional help:
# - Check the Tribes documentation: https://docs.tribes.xyz
# - Join the Tribes community: https://discord.gg/tribes
# - Contact support: https://tribes.xyz/support
